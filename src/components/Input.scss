@use '@/styles/variables' as v;

$color: v.$text-color;
$secondary-color: v.$tertiary-color;
$tertiary-color: v.$background-primary-color;
$placeholder-color: v.$text-color;
$font-size: 1rem;
$font-weight-button: 500;
$font-weight-input-text: 300;
$font-style-input-text: italic;
$font-family: inherit;
$border-empty: 1px solid $color;
$border-radius: 4px;
$padding-x: .6em;
$padding-y: .8em;
$gap: .5em;
$icon-ratio: 1.2;

.lib__input-button {
  color: $secondary-color;
  box-sizing: border-box;
  font-family: $font-family;
  font-size: $font-size;
  font-weight: $font-weight-button;
  border-radius: $border-radius;
  vertical-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: $gap;
  border: none;
  padding: $padding-x $padding-y;
  user-select: none;
  transition: .3s;
  cursor: pointer;
    &:hover {
    transition: .3s;
    border-radius: 50px;
  }
  &--fill {
    background-color: $color;
    color: $tertiary-color;
  }
  &--empty {
    border: $border-empty;
    background-color: transparent;
  }
  &--rounded {
    border-radius: 50px;
    padding: $padding-x calc($padding-y * 1.625) !important;
    &:hover {
      border-radius: $border-radius;
    }}
  &--white {
    background-color: $color;
  }}

.lib__input-text {
  position: relative;
  box-sizing: border-box;
  border: $border-empty;
  border-radius: $border-radius;
  width: fit-content;
  &__label {
    display: block;
    margin: 1rem .3rem;
  }
  & input {
    font-family: $font-family;
    font-size: $font-size;
    font-weight: $font-weight-input-text;
    gap: $gap;
    padding: $padding-x $padding-y;
    &::placeholder {
      color: $placeholder-color;
      font-style: $font-style-input-text;
    }
    &::-webkit-input-placeholder { color: $placeholder-color; font-style: $font-style-input-text; }
    &::-moz-placeholder { color: $placeholder-color; font-style: $font-style-input-text; }
    &:-moz-placeholder { color: $placeholder-color; font-style: $font-style-input-text; }
    &:-ms-input-placeholder { color: $placeholder-color; font-style: $font-style-input-text; }
    &.lib__input-text--has-icon {
      margin-left: calc(calc($font-size * $icon-ratio) + $padding-y);
    }}
  & svg, img {
    position: absolute;
    top: calc($padding-x / $icon-ratio);
    left: calc($padding-y);
    width: calc($font-size * $icon-ratio);
    fill: rgba($color: $placeholder-color, $alpha: .45);
  }
  &--rounded {
    border-radius: 50px;
  }}


$toggle-back-color: v.$background-secondary-color;
$toggle-selected-color: v.$tertiary-color;
$toggle-unselected-color: v.$text-color;
$toggle-button-color: v.$primary-color;
$toggle-font-size: .8rem;
$toggle-font-weight: 600;
$toggle-letter-spacing: .05rem;
$toggle-radius: 50px;
$toggle-width: 80px;
$toggle-padding: .3rem 0;
$toggle-transition: transform 200ms;

.lib__input-toggle {
  position: relative;
  background: $toggle-back-color;
  border-radius: $toggle-radius;
  color: $toggle-unselected-color;
  fill: $toggle-unselected-color;
  font-size: $toggle-font-size;
  font-weight: $toggle-font-weight;
  letter-spacing: $toggle-letter-spacing;
  text-transform: uppercase;
  text-align: center;
  width: $toggle-width;
  padding-right: calc($toggle-width / 2);
  & span.right {
    position: absolute;
    top: 0; bottom: 0; right: 0;
    width: calc($toggle-width / 2);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 3;
    pointer-events: none;
  }
  & input[type='checkbox'] {
    cursor: pointer;
    position: absolute;
    top: 0; left: 0; bottom: 0;
    width: 100%; height: 100%;
    opacity: 0;
    z-index: 2;
    &:checked + label:before {
      transform: translateX(calc($toggle-width / 2));
      transition: $toggle-transition;
    }
    & + label {
      position: relative;
      padding: $toggle-padding;
      display: block;
      user-select: none;
      pointer-events: none;
      &:before {
        content: '';
        background: $toggle-button-color;
        height: 100%; width: 100%;
        position: absolute;
        left: 0; top: 0;
        border-radius: $toggle-radius;
        transform: translateX(0);
        transition: $toggle-transition;
      }
      span.left {
        position: relative;
      }}}}